extra_fields=None working_dir='/ssddata/zhengjun/Dataset_tests/multi-1' exp_name='tree_graph' data_root='/ssddata/zhengjun/GraphRAG-master/Data' dataset_name='multi-1' llm=LLMConfig(extra_fields=None, api_key='sk-SL2TWFYq97803d15F1D5T3BlbKFJ9dCf90F93b374a52839a', api_type=<LLMType.OPEN_LLM: 'open_llm'>, base_url='https://cfcus02.opapi.win/v1', api_version=None, model='TA/meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo', pricing_plan=None, access_key=None, secret_key=None, session_token=None, endpoint=None, app_id=None, api_secret=None, domain=None, max_token=4096, temperature=0.0, top_p=1.0, top_k=0, repetition_penalty=1.0, stop=None, presence_penalty=0.0, frequency_penalty=0.0, best_of=None, n=None, stream=False, seed=None, logprobs=None, top_logprobs=None, timeout=600, context_length=None, region_name=None, proxy=None, max_concurrent=32, calc_usage=True, use_system_prompt=True) embedding=EmbeddingConfig(extra_fields=None, api_type=<EmbeddingType.HF: 'hf'>, api_key='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', base_url=None, api_version=None, model='BAAI/bge-m3', cache_folder=None, embed_batch_size=128, dimensions=1024) use_entities_vdb=True use_relations_vdb=False use_subgraphs_vdb=True vdb_type='faiss' token_model='gpt-3.5-turbo' chunk=ChunkConfig(extra_fields=None, chunk_token_size=1200, chunk_overlap_token_size=100, chunk_method='chunking_by_token_size') chunk_token_size=1200 chunk_overlap_token_size=100 chunk_method='chunking_by_token_size' llm_model_max_token_size=32768 use_entity_link_chunk=False graph=GraphConfig(extra_fields=None, graph_type='tree_graph_dynamic', extract_two_step=True, max_gleaning=1, force=False, add=True, enable_entity_description=False, enable_entity_type=False, enable_edge_description=False, enable_edge_name=False, prior_prob=0.8, enable_edge_keywords=False, use_community=False, graph_cluster_algorithm='leiden', max_graph_cluster_size=10, graph_cluster_seed=3735928559, summary_max_tokens=500, llm_model_max_token_size=32768, build_tree_from_leaves=True, reduction_dimension=10, summarization_length=100, num_layers=5, top_k=5, threshold_cluster_num=5000, start_layer=5, graph_cluster_params=None, selection_mode='top_k', max_length_in_cluster=3500, threshold=0.1, cluster_metric='cosine', verbose=False, random_seed=224, enforce_sub_communities=False, max_size_percentage=0.2, tol=0.0001, max_iter=10, size_of_clusters=10, upper_limit=15, avg_size=10, lower_limit=5, num_hyperplanes=20, similarity_threshold=0.8, similarity_top_k=10, similarity_max=1.0) retriever=RetrieverConfig(extra_fields=None, query_type='basic', enable_local=False, use_entity_similarity_for_ppr=True, top_k_entity_for_ppr=8, node_specificity=True, damping=0.1, top_k=5, k_nei=3, max_token_for_local_context=4800, use_relations_vdb=False, use_subgraphs_vdb=False) use_colbert=True colbert_checkpoint_path='/home/yingli/HippoRAG/exp/colbertv2.0' index_name='tree_graph_dynamic' similarity_max=1.0 enable_graph_augmentation=False query=QueryConfig(extra_fields=None, query_type='qa', only_need_context=False, response_type='Multiple Paragraphs', level=2, top_k=20, nei_k=3, num_doc=5, naive_max_token_for_text_unit=12000, use_keywords=True, use_communiy_info=False, enable_local=False, local_max_token_for_text_unit=4000, local_max_token_for_community_report=3200, local_community_single_one=False, community_information=True, global_min_community_rating=0.0, global_max_consider_community=512.0, global_max_token_for_community_report=16384, max_token_for_global_context=4000, global_special_community_map_llm_kwargs={'response_format': {'type': 'json_object'}}, use_global_query=True, enable_hybrid_query=True, max_ir_steps=2, augmentation_ppr=True, entities_max_tokens=2000, relationships_max_tokens=2000, tree_search=True, depth=3, width=3, max_txt_len=512, topk_e=3, cost_e=0.5, topk_entity=10, k_hop=2)
####################################################################################################
 _____ _____ _____ _____ __  __  ____  _   _ 
|  __ \_   _/ ____|_   _|  \/  |/ __ \| \ | |
| |  | || || |  __  | | | \  / | |  | |  \| |
| |  | || || | |_ | | | | |\/| | |  | | . ` |
| |__| || || |__| |_| |_| |  | | |__| | |\  |
|_____/_____\_____|_____|_|  |_|\____/|_| \_|
                                             
                                             

╔════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ Welcome to DIGIMON: Deep Analysis of Graph-Based RAG Systems.                                          ║
║                                                                                                        ║
║ Unlock advanced insights with our comprehensive tool for evaluating and optimizing RAG models.         ║
║                                                                                                        ║
║ You can freely combine any graph-based RAG algorithms you desire. We hope this will be helpful to you! ║
╚════════════════════════════════════════════════════════════════════════════════════════════════════════╝
####################################################################################################
